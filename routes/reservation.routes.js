const express = require('express');
const router = express.Router();
const Reservation = require('../models/Reservation');

// POST /api/reservations ‚Üí cr√©er une r√©servation
router.post('/', async (req, res) => {
  try {
    const reservation = new Reservation(req.body);
    console.log('üì¶ Donn√©es re√ßues c√¥t√© serveur :', req.body);

    await reservation.save();
    res.status(201).json({ message: '‚úÖ R√©servation enregistr√©e !' });
  } catch (error) {
    console.error('Erreur cr√©ation r√©servation :', error);
    res.status(500).json({ message: '‚ùå Erreur serveur' });
  }
});

// GET /api/reservations ‚Üí r√©cup√©rer toutes les r√©servations (admin)
router.get('/', async (req, res) => {
  try {
    const reservations = await Reservation.find();
    res.json(reservations);
  } catch (error) {
    console.error('Erreur r√©cup√©ration r√©servations :', error);
    res.status(500).json({ message: '‚ùå Erreur serveur' });
  }
});

// Route GET : /api/reservations/:email
router.get('/:email', async (req, res) => {
  try {
    const email = req.params.email;
    const reservations = await Reservation.find({ email });
    res.json(reservations);
  } catch (err) {
    console.error('‚ùå Erreur r√©cup√©ration r√©servations :', err);
    res.status(500).json({ message: 'Erreur serveur' });
  }
});

// DELETE /api/reservations/:id
router.delete('/:id', async (req, res) => {
  try {
    await Reservation.findByIdAndDelete(req.params.id);
    res.status(200).json({ message: 'R√©servation supprim√©e' });
  } catch (error) {
    console.error('Erreur suppression r√©servation :', error);
    res.status(500).json({ message: 'Erreur serveur' });
  }
});


module.exports = router;
